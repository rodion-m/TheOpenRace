@page "/auth"

@using OpenRace.Features.Payment
@using OpenRace.Entities
@using OpenRace.Data.Ef
@using OpenRace.Data.Specifications
@using OpenRace.Features.Auth
@using OpenRace.Features.Registration

@inherits OpenRace.Features.Auth.ComponentBaseWithSession

@inject NavigationManager NavigationManager
@inject AppConfig AppConfig
@inject MembersRepository MembersRepository
@inject PaymentService PaymentService
@inject RegistrationService RegistrationService
@inject IToastService ToastService

<h1>Авторизация</h1>

@if (SessionService.IsAuthorized())
{
	<h2 style="color: green">Вы авторизованы как @(Account.UserName)</h2>
	<button class="btn-danger" @onclick="Logout">Выход</button>
} else {

	<EditForm Model="_model" OnSubmit="TryLogin">
		<table>
			<tr><td>Пользователь:</td> <td><InputText @bind-Value="_model.UserName"></InputText></td></tr>
			<tr><td>Пароль:</td> <td><InputText @bind-Value="_model.Password"></InputText></td></tr>
			<tr><td colspan="2"><input class="btn btn-success" type="submit" value="Войти"></td></tr>
		</table>
	</EditForm>
}

@code {
	private class Model
	{
		public string UserName { get; set; } = "";
		public string Password { get; set; } = "";
	}

	readonly Model _model = new();

	private async Task TryLogin()
	{
		if (await SessionService.Auth(_model.UserName, _model.Password))
		{
			ToastService.ShowSuccess("Успешная авторизация");
			//NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
		}
		else
		{
			ToastService.ShowError("Пользователь или пароль не совпадают");
		}
	}

	private async Task Logout()
	{
		await SessionService.Reset();
		ToastService.ShowSuccess("Вы вышли из системы");
		NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
	}

}