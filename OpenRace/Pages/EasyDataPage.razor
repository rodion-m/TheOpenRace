@page "/easydata/{entity?}"

@inherits OpenRace.Features.Auth.ComponentBaseWithSession
@using Microsoft.Extensions.Logging
@implements IAsyncDisposable

@inject ILogger<EasyDataPage> _logger
@inject IJSRuntime JSRuntime

@if (Session.IsAuthorized())
{
    <div class="container">
        <div id="EasyDataContainer"></div>
    </div>
}
else
{
    <div>Требуется авторизация</div>
}

@code {
    [Parameter]
    public string? Entity { get; set; }

    private bool _firstRenderComplete;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("runEasyData");
            _firstRenderComplete = true;
        }
    }

    private bool _disposed;

    public async ValueTask DisposeAsync()
    {
        if (_firstRenderComplete && !_disposed)
        {
            _disposed = true;
            try
            {
                await JSRuntime.InvokeVoidAsync("stopEasyData");
            }
            catch (Exception e)
            {
                _logger.LogWarning(e, $"Exception inside {nameof(DisposeAsync)}");
            }
        }
    }

}